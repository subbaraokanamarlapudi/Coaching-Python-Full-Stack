* python is a interpreted , general purpose , object oriented programming
language[1989]
* Guido Van Rossum , he introduced the python. Monty pythons flying circus.

FEATURES OF PYTHON:
* Simple and easy to learn
* Freeware and opensource
* High level programming language
* Platform independent
* Portability
* Dynamic typing programming language
* Both procedure oriented and object oriented programming language
* interpreted programming language
* Extensible
* Embeded
* Extensive library

LANGUAGE FUNDAMENTALS:
1.IDENTIFIERs :
* A name in the pythonn program is called as identifier.
* It can be a class name or function or module name or variable name.

RULES : 
1.Alphabates(a-z/A-Z)
2.Numbers(0-9)
3.Under score(_)
4.Not allowed to start with number

Ex: cash = 100 --> valid
cas&h = 100 ---> Invalid

123total = 100 --> Invalid
total = 100 --> valid

total = 100
TOTAL = 200

firstNameLastName() --> camelcase(java)
first_name_last_name() --> snake case(python)
FirstNameLastName() --> Pascal case
first-name-last-name --> kebab case(lisp programming language)

It should print all the keywords in the python.

import keyword
keyword.kwlist
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DATA TYPES:
There are 2 types, 1.Fundamental datatype  2. collection datatype

1.FUNDAMENTAL DATATYPE:
* The basic building block of programming datatypes.
* There are : int , float , string , bool , complex.
* It is also called as primitive datatype.
* Data types are ones in which we can only store one value in their variables, never more than one value of the same type.

2. COLLECTION DATATYPE:
* It is used to store the data in containers are commonly known as datastructures.
* There are : List , tuple , dictionary , bytes , bytearray , set , frozenset , range , None.
* It is also called as non-primitive datatype.
* Data types are can store the multiple datatypes in one datatype.

LIST:
* It is a ordered mutable collection of elements.
* It is denoted by [].
* Insertion order is preserved.
* Hetrogenious objects are allowed.
* Duplicate values are allowed.
* Growable in nature.
* Indexing and slicing supported.

TUPLE:
* It is a ordered immutable collection of elements.
* It is denoted by ().
* Insertion order is preserved.
* Hetrogenious objects are allowed.
* Duplicate are allowed.
* Growable nature are not allowed.
* Indexing and slicing supported.

SET:
* It is a unordered and mutable collection of unique elements.
* It is denoted by {}
* Insertion order is preserved.
* Hetrogenious objects are allowed.
* Duplicates are not allowed.
* Doesnot perform Indexing and slicing.

DICTIONARY:
* It is a ordered and mutable collection of elements.
* It is denoted by {}.
* It represents the key value pair in the dictionary.
* Insertion order is preserved.
* Hetrogenious objects are allowed.
* Duplicate are not allowed.
* Indexing and slicing are allowed.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* When list and tuple comparison by default datatype is "TUPLE".
* When set and dictionary comparison by default datatype is "DICTIONARY".
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

OPERATORS:
* It is used to perform the operations on the data.
* It is a symbol that performs certain operations.
* There are 5 types are there : 1.Arithmetric operator  , 2.Relational operator , 
3.Assignment operator , 4.Logical operator , 5.Bitwise operator , 6..Equality operator , 

1.ARITHMETRIC OPERATORS:
* It is used to perform the basic mathamatics between 2 arguments.
* There are : +,-,*,/,//,%,**
* / -> when 2 arguments are perform division(/) it gives the decimal[float] value.
* // -> when 2 arguments are perform (//) it gives the integer value.
* Atleast one arguments are one float and one integer value it should return the float value.

Example:
10/2 #5.0  ,  10.0/2 #5.0 
10//2 #5   ,  10.0//2 #5.0

Note : 
* If want to use the string operator for both arguments,it should return the error  ----> Eg: 'sunny'+3 #Invalid , 'sunnu' + '3' # valid

2.RELATIONAL OPERATOR:
* It is used to compare the 2 arguments.
* There are: <,<=,>,>=
* we can apply the Relational operator for 'str' type also.

Example:
'sunny'<'mahesh' ---> By comparing the both string python complier observe the starting letter of both strings and give the output.
* By comparing the 's' ASCII value and 'm' ASCII value in the both arguments.   ord(s) #115 , ord(m) #109

3. Equality operator:
* It is used to compare the value of given 2 arguments.
* There are : == , !=

Example: 
10=='sunny' #False 
10==10.0 #True
10=='10' #False
10.10 == 10.1 # True

4.Logical operator:
* 